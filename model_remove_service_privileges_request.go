/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RemoveServicePrivilegesRequest struct for RemoveServicePrivilegesRequest
type RemoveServicePrivilegesRequest struct {
	ApiServerId int64 `json:"apiServerId"`
	OrganizationId int64 `json:"organizationId"`
	UserId int64 `json:"userId"`
	ServiceId int64 `json:"serviceId"`
}

// NewRemoveServicePrivilegesRequest instantiates a new RemoveServicePrivilegesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoveServicePrivilegesRequest(apiServerId int64, organizationId int64, userId int64, serviceId int64) *RemoveServicePrivilegesRequest {
	this := RemoveServicePrivilegesRequest{}
	this.ApiServerId = apiServerId
	this.OrganizationId = organizationId
	this.UserId = userId
	this.ServiceId = serviceId
	return &this
}

// NewRemoveServicePrivilegesRequestWithDefaults instantiates a new RemoveServicePrivilegesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoveServicePrivilegesRequestWithDefaults() *RemoveServicePrivilegesRequest {
	this := RemoveServicePrivilegesRequest{}
	return &this
}

// GetApiServerId returns the ApiServerId field value
func (o *RemoveServicePrivilegesRequest) GetApiServerId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ApiServerId
}

// GetApiServerIdOk returns a tuple with the ApiServerId field value
// and a boolean to check if the value has been set.
func (o *RemoveServicePrivilegesRequest) GetApiServerIdOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ApiServerId, true
}

// SetApiServerId sets field value
func (o *RemoveServicePrivilegesRequest) SetApiServerId(v int64) {
	o.ApiServerId = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *RemoveServicePrivilegesRequest) GetOrganizationId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *RemoveServicePrivilegesRequest) GetOrganizationIdOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *RemoveServicePrivilegesRequest) SetOrganizationId(v int64) {
	o.OrganizationId = v
}

// GetUserId returns the UserId field value
func (o *RemoveServicePrivilegesRequest) GetUserId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *RemoveServicePrivilegesRequest) GetUserIdOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *RemoveServicePrivilegesRequest) SetUserId(v int64) {
	o.UserId = v
}

// GetServiceId returns the ServiceId field value
func (o *RemoveServicePrivilegesRequest) GetServiceId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *RemoveServicePrivilegesRequest) GetServiceIdOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *RemoveServicePrivilegesRequest) SetServiceId(v int64) {
	o.ServiceId = v
}

func (o RemoveServicePrivilegesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["apiServerId"] = o.ApiServerId
	}
	if true {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if true {
		toSerialize["userId"] = o.UserId
	}
	if true {
		toSerialize["serviceId"] = o.ServiceId
	}
	return json.Marshal(toSerialize)
}

type NullableRemoveServicePrivilegesRequest struct {
	value *RemoveServicePrivilegesRequest
	isSet bool
}

func (v NullableRemoveServicePrivilegesRequest) Get() *RemoveServicePrivilegesRequest {
	return v.value
}

func (v *NullableRemoveServicePrivilegesRequest) Set(val *RemoveServicePrivilegesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoveServicePrivilegesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoveServicePrivilegesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoveServicePrivilegesRequest(val *RemoveServicePrivilegesRequest) *NullableRemoveServicePrivilegesRequest {
	return &NullableRemoveServicePrivilegesRequest{value: val, isSet: true}
}

func (v NullableRemoveServicePrivilegesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoveServicePrivilegesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


