/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrganizationMembershipResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationMembershipResponse{}

// OrganizationMembershipResponse struct for OrganizationMembershipResponse
type OrganizationMembershipResponse struct {
	OrganizationId *int64                        `json:"organizationId,omitempty"`
	Name           *string                       `json:"name,omitempty"`
	Plan           *string                       `json:"plan,omitempty"`
	Privileges     []string                      `json:"privileges,omitempty"`
	ApiServers     []ApiServerMembershipResponse `json:"apiServers,omitempty"`
}

// NewOrganizationMembershipResponse instantiates a new OrganizationMembershipResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationMembershipResponse() *OrganizationMembershipResponse {
	this := OrganizationMembershipResponse{}
	return &this
}

// NewOrganizationMembershipResponseWithDefaults instantiates a new OrganizationMembershipResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationMembershipResponseWithDefaults() *OrganizationMembershipResponse {
	this := OrganizationMembershipResponse{}
	return &this
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *OrganizationMembershipResponse) GetOrganizationId() int64 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int64
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationMembershipResponse) GetOrganizationIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *OrganizationMembershipResponse) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int64 and assigns it to the OrganizationId field.
func (o *OrganizationMembershipResponse) SetOrganizationId(v int64) {
	o.OrganizationId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganizationMembershipResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationMembershipResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganizationMembershipResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganizationMembershipResponse) SetName(v string) {
	o.Name = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *OrganizationMembershipResponse) GetPlan() string {
	if o == nil || IsNil(o.Plan) {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationMembershipResponse) GetPlanOk() (*string, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *OrganizationMembershipResponse) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *OrganizationMembershipResponse) SetPlan(v string) {
	o.Plan = &v
}

// GetPrivileges returns the Privileges field value if set, zero value otherwise.
func (o *OrganizationMembershipResponse) GetPrivileges() []string {
	if o == nil || IsNil(o.Privileges) {
		var ret []string
		return ret
	}
	return o.Privileges
}

// GetPrivilegesOk returns a tuple with the Privileges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationMembershipResponse) GetPrivilegesOk() ([]string, bool) {
	if o == nil || IsNil(o.Privileges) {
		return nil, false
	}
	return o.Privileges, true
}

// HasPrivileges returns a boolean if a field has been set.
func (o *OrganizationMembershipResponse) HasPrivileges() bool {
	if o != nil && !IsNil(o.Privileges) {
		return true
	}

	return false
}

// SetPrivileges gets a reference to the given []string and assigns it to the Privileges field.
func (o *OrganizationMembershipResponse) SetPrivileges(v []string) {
	o.Privileges = v
}

// GetApiServers returns the ApiServers field value if set, zero value otherwise.
func (o *OrganizationMembershipResponse) GetApiServers() []ApiServerMembershipResponse {
	if o == nil || IsNil(o.ApiServers) {
		var ret []ApiServerMembershipResponse
		return ret
	}
	return o.ApiServers
}

// GetApiServersOk returns a tuple with the ApiServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationMembershipResponse) GetApiServersOk() ([]ApiServerMembershipResponse, bool) {
	if o == nil || IsNil(o.ApiServers) {
		return nil, false
	}
	return o.ApiServers, true
}

// HasApiServers returns a boolean if a field has been set.
func (o *OrganizationMembershipResponse) HasApiServers() bool {
	if o != nil && !IsNil(o.ApiServers) {
		return true
	}

	return false
}

// SetApiServers gets a reference to the given []ApiServerMembershipResponse and assigns it to the ApiServers field.
func (o *OrganizationMembershipResponse) SetApiServers(v []ApiServerMembershipResponse) {
	o.ApiServers = v
}

func (o OrganizationMembershipResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationMembershipResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.Privileges) {
		toSerialize["privileges"] = o.Privileges
	}
	if !IsNil(o.ApiServers) {
		toSerialize["apiServers"] = o.ApiServers
	}
	return toSerialize, nil
}

type NullableOrganizationMembershipResponse struct {
	value *OrganizationMembershipResponse
	isSet bool
}

func (v NullableOrganizationMembershipResponse) Get() *OrganizationMembershipResponse {
	return v.value
}

func (v *NullableOrganizationMembershipResponse) Set(val *OrganizationMembershipResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationMembershipResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationMembershipResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationMembershipResponse(val *OrganizationMembershipResponse) *NullableOrganizationMembershipResponse {
	return &NullableOrganizationMembershipResponse{value: val, isSet: true}
}

func (v NullableOrganizationMembershipResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationMembershipResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
