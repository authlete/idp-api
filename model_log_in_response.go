/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// LogInResponse struct for LogInResponse
type LogInResponse struct {
	Id *int64 `json:"id,omitempty"`
	GivenName *string `json:"givenName,omitempty"`
	FamilyName *string `json:"familyName,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	Email *string `json:"email,omitempty"`
	LastAuthTime *time.Time `json:"lastAuthTime,omitempty"`
	AuthnMethods []string `json:"authnMethods,omitempty"`
	Webauthn *WebAuthnChallengeResponse `json:"webauthn,omitempty"`
}

// NewLogInResponse instantiates a new LogInResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogInResponse() *LogInResponse {
	this := LogInResponse{}
	return &this
}

// NewLogInResponseWithDefaults instantiates a new LogInResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogInResponseWithDefaults() *LogInResponse {
	this := LogInResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LogInResponse) GetId() int64 {
	if o == nil || isNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogInResponse) GetIdOk() (*int64, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LogInResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *LogInResponse) SetId(v int64) {
	o.Id = &v
}

// GetGivenName returns the GivenName field value if set, zero value otherwise.
func (o *LogInResponse) GetGivenName() string {
	if o == nil || isNil(o.GivenName) {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogInResponse) GetGivenNameOk() (*string, bool) {
	if o == nil || isNil(o.GivenName) {
    return nil, false
	}
	return o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *LogInResponse) HasGivenName() bool {
	if o != nil && !isNil(o.GivenName) {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *LogInResponse) SetGivenName(v string) {
	o.GivenName = &v
}

// GetFamilyName returns the FamilyName field value if set, zero value otherwise.
func (o *LogInResponse) GetFamilyName() string {
	if o == nil || isNil(o.FamilyName) {
		var ret string
		return ret
	}
	return *o.FamilyName
}

// GetFamilyNameOk returns a tuple with the FamilyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogInResponse) GetFamilyNameOk() (*string, bool) {
	if o == nil || isNil(o.FamilyName) {
    return nil, false
	}
	return o.FamilyName, true
}

// HasFamilyName returns a boolean if a field has been set.
func (o *LogInResponse) HasFamilyName() bool {
	if o != nil && !isNil(o.FamilyName) {
		return true
	}

	return false
}

// SetFamilyName gets a reference to the given string and assigns it to the FamilyName field.
func (o *LogInResponse) SetFamilyName(v string) {
	o.FamilyName = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *LogInResponse) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogInResponse) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
    return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *LogInResponse) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *LogInResponse) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *LogInResponse) GetEmail() string {
	if o == nil || isNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogInResponse) GetEmailOk() (*string, bool) {
	if o == nil || isNil(o.Email) {
    return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *LogInResponse) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *LogInResponse) SetEmail(v string) {
	o.Email = &v
}

// GetLastAuthTime returns the LastAuthTime field value if set, zero value otherwise.
func (o *LogInResponse) GetLastAuthTime() time.Time {
	if o == nil || isNil(o.LastAuthTime) {
		var ret time.Time
		return ret
	}
	return *o.LastAuthTime
}

// GetLastAuthTimeOk returns a tuple with the LastAuthTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogInResponse) GetLastAuthTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.LastAuthTime) {
    return nil, false
	}
	return o.LastAuthTime, true
}

// HasLastAuthTime returns a boolean if a field has been set.
func (o *LogInResponse) HasLastAuthTime() bool {
	if o != nil && !isNil(o.LastAuthTime) {
		return true
	}

	return false
}

// SetLastAuthTime gets a reference to the given time.Time and assigns it to the LastAuthTime field.
func (o *LogInResponse) SetLastAuthTime(v time.Time) {
	o.LastAuthTime = &v
}

// GetAuthnMethods returns the AuthnMethods field value if set, zero value otherwise.
func (o *LogInResponse) GetAuthnMethods() []string {
	if o == nil || isNil(o.AuthnMethods) {
		var ret []string
		return ret
	}
	return o.AuthnMethods
}

// GetAuthnMethodsOk returns a tuple with the AuthnMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogInResponse) GetAuthnMethodsOk() ([]string, bool) {
	if o == nil || isNil(o.AuthnMethods) {
    return nil, false
	}
	return o.AuthnMethods, true
}

// HasAuthnMethods returns a boolean if a field has been set.
func (o *LogInResponse) HasAuthnMethods() bool {
	if o != nil && !isNil(o.AuthnMethods) {
		return true
	}

	return false
}

// SetAuthnMethods gets a reference to the given []string and assigns it to the AuthnMethods field.
func (o *LogInResponse) SetAuthnMethods(v []string) {
	o.AuthnMethods = v
}

// GetWebauthn returns the Webauthn field value if set, zero value otherwise.
func (o *LogInResponse) GetWebauthn() WebAuthnChallengeResponse {
	if o == nil || isNil(o.Webauthn) {
		var ret WebAuthnChallengeResponse
		return ret
	}
	return *o.Webauthn
}

// GetWebauthnOk returns a tuple with the Webauthn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogInResponse) GetWebauthnOk() (*WebAuthnChallengeResponse, bool) {
	if o == nil || isNil(o.Webauthn) {
    return nil, false
	}
	return o.Webauthn, true
}

// HasWebauthn returns a boolean if a field has been set.
func (o *LogInResponse) HasWebauthn() bool {
	if o != nil && !isNil(o.Webauthn) {
		return true
	}

	return false
}

// SetWebauthn gets a reference to the given WebAuthnChallengeResponse and assigns it to the Webauthn field.
func (o *LogInResponse) SetWebauthn(v WebAuthnChallengeResponse) {
	o.Webauthn = &v
}

func (o LogInResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.GivenName) {
		toSerialize["givenName"] = o.GivenName
	}
	if !isNil(o.FamilyName) {
		toSerialize["familyName"] = o.FamilyName
	}
	if !isNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !isNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !isNil(o.LastAuthTime) {
		toSerialize["lastAuthTime"] = o.LastAuthTime
	}
	if !isNil(o.AuthnMethods) {
		toSerialize["authnMethods"] = o.AuthnMethods
	}
	if !isNil(o.Webauthn) {
		toSerialize["webauthn"] = o.Webauthn
	}
	return json.Marshal(toSerialize)
}

type NullableLogInResponse struct {
	value *LogInResponse
	isSet bool
}

func (v NullableLogInResponse) Get() *LogInResponse {
	return v.value
}

func (v *NullableLogInResponse) Set(val *LogInResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLogInResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLogInResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogInResponse(val *LogInResponse) *NullableLogInResponse {
	return &NullableLogInResponse{value: val, isSet: true}
}

func (v NullableLogInResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogInResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


