/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateServiceRequest struct for CreateServiceRequest
type CreateServiceRequest struct {
	ApiServerId int64 `json:"apiServerId"`
	OrganizationId int64 `json:"organizationId"`
	Service *Service `json:"service,omitempty"`
}

// NewCreateServiceRequest instantiates a new CreateServiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateServiceRequest(apiServerId int64, organizationId int64) *CreateServiceRequest {
	this := CreateServiceRequest{}
	this.ApiServerId = apiServerId
	this.OrganizationId = organizationId
	return &this
}

// NewCreateServiceRequestWithDefaults instantiates a new CreateServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateServiceRequestWithDefaults() *CreateServiceRequest {
	this := CreateServiceRequest{}
	return &this
}

// GetApiServerId returns the ApiServerId field value
func (o *CreateServiceRequest) GetApiServerId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ApiServerId
}

// GetApiServerIdOk returns a tuple with the ApiServerId field value
// and a boolean to check if the value has been set.
func (o *CreateServiceRequest) GetApiServerIdOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ApiServerId, true
}

// SetApiServerId sets field value
func (o *CreateServiceRequest) SetApiServerId(v int64) {
	o.ApiServerId = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *CreateServiceRequest) GetOrganizationId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *CreateServiceRequest) GetOrganizationIdOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *CreateServiceRequest) SetOrganizationId(v int64) {
	o.OrganizationId = v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *CreateServiceRequest) GetService() Service {
	if o == nil || isNil(o.Service) {
		var ret Service
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServiceRequest) GetServiceOk() (*Service, bool) {
	if o == nil || isNil(o.Service) {
    return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *CreateServiceRequest) HasService() bool {
	if o != nil && !isNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given Service and assigns it to the Service field.
func (o *CreateServiceRequest) SetService(v Service) {
	o.Service = &v
}

func (o CreateServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["apiServerId"] = o.ApiServerId
	}
	if true {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !isNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	return json.Marshal(toSerialize)
}

type NullableCreateServiceRequest struct {
	value *CreateServiceRequest
	isSet bool
}

func (v NullableCreateServiceRequest) Get() *CreateServiceRequest {
	return v.value
}

func (v *NullableCreateServiceRequest) Set(val *CreateServiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateServiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateServiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateServiceRequest(val *CreateServiceRequest) *NullableCreateServiceRequest {
	return &NullableCreateServiceRequest{value: val, isSet: true}
}

func (v NullableCreateServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateServiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


