/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AuthleteApiServerUpdateResponse struct for AuthleteApiServerUpdateResponse
type AuthleteApiServerUpdateResponse struct {
	ApiServerUrl *string `json:"apiServerUrl,omitempty"`
	Description *string `json:"description,omitempty"`
	Id *int64 `json:"id,omitempty"`
}

// NewAuthleteApiServerUpdateResponse instantiates a new AuthleteApiServerUpdateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthleteApiServerUpdateResponse() *AuthleteApiServerUpdateResponse {
	this := AuthleteApiServerUpdateResponse{}
	return &this
}

// NewAuthleteApiServerUpdateResponseWithDefaults instantiates a new AuthleteApiServerUpdateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthleteApiServerUpdateResponseWithDefaults() *AuthleteApiServerUpdateResponse {
	this := AuthleteApiServerUpdateResponse{}
	return &this
}

// GetApiServerUrl returns the ApiServerUrl field value if set, zero value otherwise.
func (o *AuthleteApiServerUpdateResponse) GetApiServerUrl() string {
	if o == nil || isNil(o.ApiServerUrl) {
		var ret string
		return ret
	}
	return *o.ApiServerUrl
}

// GetApiServerUrlOk returns a tuple with the ApiServerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthleteApiServerUpdateResponse) GetApiServerUrlOk() (*string, bool) {
	if o == nil || isNil(o.ApiServerUrl) {
    return nil, false
	}
	return o.ApiServerUrl, true
}

// HasApiServerUrl returns a boolean if a field has been set.
func (o *AuthleteApiServerUpdateResponse) HasApiServerUrl() bool {
	if o != nil && !isNil(o.ApiServerUrl) {
		return true
	}

	return false
}

// SetApiServerUrl gets a reference to the given string and assigns it to the ApiServerUrl field.
func (o *AuthleteApiServerUpdateResponse) SetApiServerUrl(v string) {
	o.ApiServerUrl = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AuthleteApiServerUpdateResponse) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthleteApiServerUpdateResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AuthleteApiServerUpdateResponse) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AuthleteApiServerUpdateResponse) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AuthleteApiServerUpdateResponse) GetId() int64 {
	if o == nil || isNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthleteApiServerUpdateResponse) GetIdOk() (*int64, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AuthleteApiServerUpdateResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AuthleteApiServerUpdateResponse) SetId(v int64) {
	o.Id = &v
}

func (o AuthleteApiServerUpdateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ApiServerUrl) {
		toSerialize["apiServerUrl"] = o.ApiServerUrl
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableAuthleteApiServerUpdateResponse struct {
	value *AuthleteApiServerUpdateResponse
	isSet bool
}

func (v NullableAuthleteApiServerUpdateResponse) Get() *AuthleteApiServerUpdateResponse {
	return v.value
}

func (v *NullableAuthleteApiServerUpdateResponse) Set(val *AuthleteApiServerUpdateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthleteApiServerUpdateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthleteApiServerUpdateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthleteApiServerUpdateResponse(val *AuthleteApiServerUpdateResponse) *NullableAuthleteApiServerUpdateResponse {
	return &NullableAuthleteApiServerUpdateResponse{value: val, isSet: true}
}

func (v NullableAuthleteApiServerUpdateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthleteApiServerUpdateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


