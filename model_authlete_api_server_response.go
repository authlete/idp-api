/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AuthleteApiServerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthleteApiServerResponse{}

// AuthleteApiServerResponse struct for AuthleteApiServerResponse
type AuthleteApiServerResponse struct {
	Id           *int64  `json:"id,omitempty"`
	ApiServerUrl *string `json:"apiServerUrl,omitempty"`
	Description  *string `json:"description,omitempty"`
	OwnedBy      *int64  `json:"ownedBy,omitempty"`
}

// NewAuthleteApiServerResponse instantiates a new AuthleteApiServerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthleteApiServerResponse() *AuthleteApiServerResponse {
	this := AuthleteApiServerResponse{}
	return &this
}

// NewAuthleteApiServerResponseWithDefaults instantiates a new AuthleteApiServerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthleteApiServerResponseWithDefaults() *AuthleteApiServerResponse {
	this := AuthleteApiServerResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AuthleteApiServerResponse) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthleteApiServerResponse) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AuthleteApiServerResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AuthleteApiServerResponse) SetId(v int64) {
	o.Id = &v
}

// GetApiServerUrl returns the ApiServerUrl field value if set, zero value otherwise.
func (o *AuthleteApiServerResponse) GetApiServerUrl() string {
	if o == nil || IsNil(o.ApiServerUrl) {
		var ret string
		return ret
	}
	return *o.ApiServerUrl
}

// GetApiServerUrlOk returns a tuple with the ApiServerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthleteApiServerResponse) GetApiServerUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ApiServerUrl) {
		return nil, false
	}
	return o.ApiServerUrl, true
}

// HasApiServerUrl returns a boolean if a field has been set.
func (o *AuthleteApiServerResponse) HasApiServerUrl() bool {
	if o != nil && !IsNil(o.ApiServerUrl) {
		return true
	}

	return false
}

// SetApiServerUrl gets a reference to the given string and assigns it to the ApiServerUrl field.
func (o *AuthleteApiServerResponse) SetApiServerUrl(v string) {
	o.ApiServerUrl = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AuthleteApiServerResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthleteApiServerResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AuthleteApiServerResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AuthleteApiServerResponse) SetDescription(v string) {
	o.Description = &v
}

// GetOwnedBy returns the OwnedBy field value if set, zero value otherwise.
func (o *AuthleteApiServerResponse) GetOwnedBy() int64 {
	if o == nil || IsNil(o.OwnedBy) {
		var ret int64
		return ret
	}
	return *o.OwnedBy
}

// GetOwnedByOk returns a tuple with the OwnedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthleteApiServerResponse) GetOwnedByOk() (*int64, bool) {
	if o == nil || IsNil(o.OwnedBy) {
		return nil, false
	}
	return o.OwnedBy, true
}

// HasOwnedBy returns a boolean if a field has been set.
func (o *AuthleteApiServerResponse) HasOwnedBy() bool {
	if o != nil && !IsNil(o.OwnedBy) {
		return true
	}

	return false
}

// SetOwnedBy gets a reference to the given int64 and assigns it to the OwnedBy field.
func (o *AuthleteApiServerResponse) SetOwnedBy(v int64) {
	o.OwnedBy = &v
}

func (o AuthleteApiServerResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthleteApiServerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ApiServerUrl) {
		toSerialize["apiServerUrl"] = o.ApiServerUrl
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.OwnedBy) {
		toSerialize["ownedBy"] = o.OwnedBy
	}
	return toSerialize, nil
}

type NullableAuthleteApiServerResponse struct {
	value *AuthleteApiServerResponse
	isSet bool
}

func (v NullableAuthleteApiServerResponse) Get() *AuthleteApiServerResponse {
	return v.value
}

func (v *NullableAuthleteApiServerResponse) Set(val *AuthleteApiServerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthleteApiServerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthleteApiServerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthleteApiServerResponse(val *AuthleteApiServerResponse) *NullableAuthleteApiServerResponse {
	return &NullableAuthleteApiServerResponse{value: val, isSet: true}
}

func (v NullableAuthleteApiServerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthleteApiServerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
