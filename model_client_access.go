/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClientAccess type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientAccess{}

// ClientAccess struct for ClientAccess
type ClientAccess struct {
	Id              *int64   `json:"id,omitempty"`
	ClientId        *int64   `json:"clientId,omitempty"`
	Privileges      []string `json:"privileges,omitempty"`
	ServiceAccessId *int64   `json:"service_access_id,omitempty"`
}

// NewClientAccess instantiates a new ClientAccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientAccess() *ClientAccess {
	this := ClientAccess{}
	return &this
}

// NewClientAccessWithDefaults instantiates a new ClientAccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientAccessWithDefaults() *ClientAccess {
	this := ClientAccess{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClientAccess) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAccess) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClientAccess) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ClientAccess) SetId(v int64) {
	o.Id = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *ClientAccess) GetClientId() int64 {
	if o == nil || IsNil(o.ClientId) {
		var ret int64
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAccess) GetClientIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *ClientAccess) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given int64 and assigns it to the ClientId field.
func (o *ClientAccess) SetClientId(v int64) {
	o.ClientId = &v
}

// GetPrivileges returns the Privileges field value if set, zero value otherwise.
func (o *ClientAccess) GetPrivileges() []string {
	if o == nil || IsNil(o.Privileges) {
		var ret []string
		return ret
	}
	return o.Privileges
}

// GetPrivilegesOk returns a tuple with the Privileges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAccess) GetPrivilegesOk() ([]string, bool) {
	if o == nil || IsNil(o.Privileges) {
		return nil, false
	}
	return o.Privileges, true
}

// HasPrivileges returns a boolean if a field has been set.
func (o *ClientAccess) HasPrivileges() bool {
	if o != nil && !IsNil(o.Privileges) {
		return true
	}

	return false
}

// SetPrivileges gets a reference to the given []string and assigns it to the Privileges field.
func (o *ClientAccess) SetPrivileges(v []string) {
	o.Privileges = v
}

// GetServiceAccessId returns the ServiceAccessId field value if set, zero value otherwise.
func (o *ClientAccess) GetServiceAccessId() int64 {
	if o == nil || IsNil(o.ServiceAccessId) {
		var ret int64
		return ret
	}
	return *o.ServiceAccessId
}

// GetServiceAccessIdOk returns a tuple with the ServiceAccessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAccess) GetServiceAccessIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ServiceAccessId) {
		return nil, false
	}
	return o.ServiceAccessId, true
}

// HasServiceAccessId returns a boolean if a field has been set.
func (o *ClientAccess) HasServiceAccessId() bool {
	if o != nil && !IsNil(o.ServiceAccessId) {
		return true
	}

	return false
}

// SetServiceAccessId gets a reference to the given int64 and assigns it to the ServiceAccessId field.
func (o *ClientAccess) SetServiceAccessId(v int64) {
	o.ServiceAccessId = &v
}

func (o ClientAccess) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientAccess) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.Privileges) {
		toSerialize["privileges"] = o.Privileges
	}
	if !IsNil(o.ServiceAccessId) {
		toSerialize["service_access_id"] = o.ServiceAccessId
	}
	return toSerialize, nil
}

type NullableClientAccess struct {
	value *ClientAccess
	isSet bool
}

func (v NullableClientAccess) Get() *ClientAccess {
	return v.value
}

func (v *NullableClientAccess) Set(val *ClientAccess) {
	v.value = val
	v.isSet = true
}

func (v NullableClientAccess) IsSet() bool {
	return v.isSet
}

func (v *NullableClientAccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientAccess(val *ClientAccess) *NullableClientAccess {
	return &NullableClientAccess{value: val, isSet: true}
}

func (v NullableClientAccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientAccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
