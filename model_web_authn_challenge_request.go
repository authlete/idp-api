/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WebAuthnChallengeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebAuthnChallengeRequest{}

// WebAuthnChallengeRequest struct for WebAuthnChallengeRequest
type WebAuthnChallengeRequest struct {
	Id                *string `json:"id,omitempty"`
	AttestationObject *string `json:"attestationObject,omitempty"`
	ClientData        *string `json:"clientData,omitempty"`
	Type              *string `json:"type,omitempty"`
	AuthenticatorData *string `json:"authenticatorData,omitempty"`
	Signature         *string `json:"signature,omitempty"`
}

// NewWebAuthnChallengeRequest instantiates a new WebAuthnChallengeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebAuthnChallengeRequest() *WebAuthnChallengeRequest {
	this := WebAuthnChallengeRequest{}
	return &this
}

// NewWebAuthnChallengeRequestWithDefaults instantiates a new WebAuthnChallengeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebAuthnChallengeRequestWithDefaults() *WebAuthnChallengeRequest {
	this := WebAuthnChallengeRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WebAuthnChallengeRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebAuthnChallengeRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WebAuthnChallengeRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WebAuthnChallengeRequest) SetId(v string) {
	o.Id = &v
}

// GetAttestationObject returns the AttestationObject field value if set, zero value otherwise.
func (o *WebAuthnChallengeRequest) GetAttestationObject() string {
	if o == nil || IsNil(o.AttestationObject) {
		var ret string
		return ret
	}
	return *o.AttestationObject
}

// GetAttestationObjectOk returns a tuple with the AttestationObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebAuthnChallengeRequest) GetAttestationObjectOk() (*string, bool) {
	if o == nil || IsNil(o.AttestationObject) {
		return nil, false
	}
	return o.AttestationObject, true
}

// HasAttestationObject returns a boolean if a field has been set.
func (o *WebAuthnChallengeRequest) HasAttestationObject() bool {
	if o != nil && !IsNil(o.AttestationObject) {
		return true
	}

	return false
}

// SetAttestationObject gets a reference to the given string and assigns it to the AttestationObject field.
func (o *WebAuthnChallengeRequest) SetAttestationObject(v string) {
	o.AttestationObject = &v
}

// GetClientData returns the ClientData field value if set, zero value otherwise.
func (o *WebAuthnChallengeRequest) GetClientData() string {
	if o == nil || IsNil(o.ClientData) {
		var ret string
		return ret
	}
	return *o.ClientData
}

// GetClientDataOk returns a tuple with the ClientData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebAuthnChallengeRequest) GetClientDataOk() (*string, bool) {
	if o == nil || IsNil(o.ClientData) {
		return nil, false
	}
	return o.ClientData, true
}

// HasClientData returns a boolean if a field has been set.
func (o *WebAuthnChallengeRequest) HasClientData() bool {
	if o != nil && !IsNil(o.ClientData) {
		return true
	}

	return false
}

// SetClientData gets a reference to the given string and assigns it to the ClientData field.
func (o *WebAuthnChallengeRequest) SetClientData(v string) {
	o.ClientData = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WebAuthnChallengeRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebAuthnChallengeRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WebAuthnChallengeRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WebAuthnChallengeRequest) SetType(v string) {
	o.Type = &v
}

// GetAuthenticatorData returns the AuthenticatorData field value if set, zero value otherwise.
func (o *WebAuthnChallengeRequest) GetAuthenticatorData() string {
	if o == nil || IsNil(o.AuthenticatorData) {
		var ret string
		return ret
	}
	return *o.AuthenticatorData
}

// GetAuthenticatorDataOk returns a tuple with the AuthenticatorData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebAuthnChallengeRequest) GetAuthenticatorDataOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticatorData) {
		return nil, false
	}
	return o.AuthenticatorData, true
}

// HasAuthenticatorData returns a boolean if a field has been set.
func (o *WebAuthnChallengeRequest) HasAuthenticatorData() bool {
	if o != nil && !IsNil(o.AuthenticatorData) {
		return true
	}

	return false
}

// SetAuthenticatorData gets a reference to the given string and assigns it to the AuthenticatorData field.
func (o *WebAuthnChallengeRequest) SetAuthenticatorData(v string) {
	o.AuthenticatorData = &v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *WebAuthnChallengeRequest) GetSignature() string {
	if o == nil || IsNil(o.Signature) {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebAuthnChallengeRequest) GetSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.Signature) {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *WebAuthnChallengeRequest) HasSignature() bool {
	if o != nil && !IsNil(o.Signature) {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *WebAuthnChallengeRequest) SetSignature(v string) {
	o.Signature = &v
}

func (o WebAuthnChallengeRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebAuthnChallengeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AttestationObject) {
		toSerialize["attestationObject"] = o.AttestationObject
	}
	if !IsNil(o.ClientData) {
		toSerialize["clientData"] = o.ClientData
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.AuthenticatorData) {
		toSerialize["authenticatorData"] = o.AuthenticatorData
	}
	if !IsNil(o.Signature) {
		toSerialize["signature"] = o.Signature
	}
	return toSerialize, nil
}

type NullableWebAuthnChallengeRequest struct {
	value *WebAuthnChallengeRequest
	isSet bool
}

func (v NullableWebAuthnChallengeRequest) Get() *WebAuthnChallengeRequest {
	return v.value
}

func (v *NullableWebAuthnChallengeRequest) Set(val *WebAuthnChallengeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWebAuthnChallengeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWebAuthnChallengeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebAuthnChallengeRequest(val *WebAuthnChallengeRequest) *NullableWebAuthnChallengeRequest {
	return &NullableWebAuthnChallengeRequest{value: val, isSet: true}
}

func (v NullableWebAuthnChallengeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebAuthnChallengeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
