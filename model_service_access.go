/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ServiceAccess struct for ServiceAccess
type ServiceAccess struct {
	Id *int64 `json:"id,omitempty"`
	AllClientPrivileges []string `json:"allClientPrivileges,omitempty"`
	Privileges []string `json:"privileges,omitempty"`
	ClientAccess []ClientAccess `json:"clientAccess,omitempty"`
	ApiServerAccessId *int64 `json:"api_server_access_id,omitempty"`
	ServiceId *ServiceInstance `json:"service_id,omitempty"`
}

// NewServiceAccess instantiates a new ServiceAccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceAccess() *ServiceAccess {
	this := ServiceAccess{}
	return &this
}

// NewServiceAccessWithDefaults instantiates a new ServiceAccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceAccessWithDefaults() *ServiceAccess {
	this := ServiceAccess{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceAccess) GetId() int64 {
	if o == nil || isNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccess) GetIdOk() (*int64, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceAccess) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ServiceAccess) SetId(v int64) {
	o.Id = &v
}

// GetAllClientPrivileges returns the AllClientPrivileges field value if set, zero value otherwise.
func (o *ServiceAccess) GetAllClientPrivileges() []string {
	if o == nil || isNil(o.AllClientPrivileges) {
		var ret []string
		return ret
	}
	return o.AllClientPrivileges
}

// GetAllClientPrivilegesOk returns a tuple with the AllClientPrivileges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccess) GetAllClientPrivilegesOk() ([]string, bool) {
	if o == nil || isNil(o.AllClientPrivileges) {
    return nil, false
	}
	return o.AllClientPrivileges, true
}

// HasAllClientPrivileges returns a boolean if a field has been set.
func (o *ServiceAccess) HasAllClientPrivileges() bool {
	if o != nil && !isNil(o.AllClientPrivileges) {
		return true
	}

	return false
}

// SetAllClientPrivileges gets a reference to the given []string and assigns it to the AllClientPrivileges field.
func (o *ServiceAccess) SetAllClientPrivileges(v []string) {
	o.AllClientPrivileges = v
}

// GetPrivileges returns the Privileges field value if set, zero value otherwise.
func (o *ServiceAccess) GetPrivileges() []string {
	if o == nil || isNil(o.Privileges) {
		var ret []string
		return ret
	}
	return o.Privileges
}

// GetPrivilegesOk returns a tuple with the Privileges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccess) GetPrivilegesOk() ([]string, bool) {
	if o == nil || isNil(o.Privileges) {
    return nil, false
	}
	return o.Privileges, true
}

// HasPrivileges returns a boolean if a field has been set.
func (o *ServiceAccess) HasPrivileges() bool {
	if o != nil && !isNil(o.Privileges) {
		return true
	}

	return false
}

// SetPrivileges gets a reference to the given []string and assigns it to the Privileges field.
func (o *ServiceAccess) SetPrivileges(v []string) {
	o.Privileges = v
}

// GetClientAccess returns the ClientAccess field value if set, zero value otherwise.
func (o *ServiceAccess) GetClientAccess() []ClientAccess {
	if o == nil || isNil(o.ClientAccess) {
		var ret []ClientAccess
		return ret
	}
	return o.ClientAccess
}

// GetClientAccessOk returns a tuple with the ClientAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccess) GetClientAccessOk() ([]ClientAccess, bool) {
	if o == nil || isNil(o.ClientAccess) {
    return nil, false
	}
	return o.ClientAccess, true
}

// HasClientAccess returns a boolean if a field has been set.
func (o *ServiceAccess) HasClientAccess() bool {
	if o != nil && !isNil(o.ClientAccess) {
		return true
	}

	return false
}

// SetClientAccess gets a reference to the given []ClientAccess and assigns it to the ClientAccess field.
func (o *ServiceAccess) SetClientAccess(v []ClientAccess) {
	o.ClientAccess = v
}

// GetApiServerAccessId returns the ApiServerAccessId field value if set, zero value otherwise.
func (o *ServiceAccess) GetApiServerAccessId() int64 {
	if o == nil || isNil(o.ApiServerAccessId) {
		var ret int64
		return ret
	}
	return *o.ApiServerAccessId
}

// GetApiServerAccessIdOk returns a tuple with the ApiServerAccessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccess) GetApiServerAccessIdOk() (*int64, bool) {
	if o == nil || isNil(o.ApiServerAccessId) {
    return nil, false
	}
	return o.ApiServerAccessId, true
}

// HasApiServerAccessId returns a boolean if a field has been set.
func (o *ServiceAccess) HasApiServerAccessId() bool {
	if o != nil && !isNil(o.ApiServerAccessId) {
		return true
	}

	return false
}

// SetApiServerAccessId gets a reference to the given int64 and assigns it to the ApiServerAccessId field.
func (o *ServiceAccess) SetApiServerAccessId(v int64) {
	o.ApiServerAccessId = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *ServiceAccess) GetServiceId() ServiceInstance {
	if o == nil || isNil(o.ServiceId) {
		var ret ServiceInstance
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccess) GetServiceIdOk() (*ServiceInstance, bool) {
	if o == nil || isNil(o.ServiceId) {
    return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *ServiceAccess) HasServiceId() bool {
	if o != nil && !isNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given ServiceInstance and assigns it to the ServiceId field.
func (o *ServiceAccess) SetServiceId(v ServiceInstance) {
	o.ServiceId = &v
}

func (o ServiceAccess) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.AllClientPrivileges) {
		toSerialize["allClientPrivileges"] = o.AllClientPrivileges
	}
	if !isNil(o.Privileges) {
		toSerialize["privileges"] = o.Privileges
	}
	if !isNil(o.ClientAccess) {
		toSerialize["clientAccess"] = o.ClientAccess
	}
	if !isNil(o.ApiServerAccessId) {
		toSerialize["api_server_access_id"] = o.ApiServerAccessId
	}
	if !isNil(o.ServiceId) {
		toSerialize["service_id"] = o.ServiceId
	}
	return json.Marshal(toSerialize)
}

type NullableServiceAccess struct {
	value *ServiceAccess
	isSet bool
}

func (v NullableServiceAccess) Get() *ServiceAccess {
	return v.value
}

func (v *NullableServiceAccess) Set(val *ServiceAccess) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAccess) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAccess(val *ServiceAccess) *NullableServiceAccess {
	return &NullableServiceAccess{value: val, isSet: true}
}

func (v NullableServiceAccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


