/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UpdateApiServerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateApiServerRequest{}

// UpdateApiServerRequest struct for UpdateApiServerRequest
type UpdateApiServerRequest struct {
	ApiServerUrl string `json:"apiServerUrl"`
	Description  string `json:"description"`
	OwnedBy      *int64 `json:"ownedBy,omitempty"`
}

type _UpdateApiServerRequest UpdateApiServerRequest

// NewUpdateApiServerRequest instantiates a new UpdateApiServerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateApiServerRequest(apiServerUrl string, description string) *UpdateApiServerRequest {
	this := UpdateApiServerRequest{}
	this.ApiServerUrl = apiServerUrl
	this.Description = description
	return &this
}

// NewUpdateApiServerRequestWithDefaults instantiates a new UpdateApiServerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateApiServerRequestWithDefaults() *UpdateApiServerRequest {
	this := UpdateApiServerRequest{}
	return &this
}

// GetApiServerUrl returns the ApiServerUrl field value
func (o *UpdateApiServerRequest) GetApiServerUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiServerUrl
}

// GetApiServerUrlOk returns a tuple with the ApiServerUrl field value
// and a boolean to check if the value has been set.
func (o *UpdateApiServerRequest) GetApiServerUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiServerUrl, true
}

// SetApiServerUrl sets field value
func (o *UpdateApiServerRequest) SetApiServerUrl(v string) {
	o.ApiServerUrl = v
}

// GetDescription returns the Description field value
func (o *UpdateApiServerRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *UpdateApiServerRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *UpdateApiServerRequest) SetDescription(v string) {
	o.Description = v
}

// GetOwnedBy returns the OwnedBy field value if set, zero value otherwise.
func (o *UpdateApiServerRequest) GetOwnedBy() int64 {
	if o == nil || IsNil(o.OwnedBy) {
		var ret int64
		return ret
	}
	return *o.OwnedBy
}

// GetOwnedByOk returns a tuple with the OwnedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApiServerRequest) GetOwnedByOk() (*int64, bool) {
	if o == nil || IsNil(o.OwnedBy) {
		return nil, false
	}
	return o.OwnedBy, true
}

// HasOwnedBy returns a boolean if a field has been set.
func (o *UpdateApiServerRequest) HasOwnedBy() bool {
	if o != nil && !IsNil(o.OwnedBy) {
		return true
	}

	return false
}

// SetOwnedBy gets a reference to the given int64 and assigns it to the OwnedBy field.
func (o *UpdateApiServerRequest) SetOwnedBy(v int64) {
	o.OwnedBy = &v
}

func (o UpdateApiServerRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateApiServerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apiServerUrl"] = o.ApiServerUrl
	toSerialize["description"] = o.Description
	if !IsNil(o.OwnedBy) {
		toSerialize["ownedBy"] = o.OwnedBy
	}
	return toSerialize, nil
}

func (o *UpdateApiServerRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"apiServerUrl",
		"description",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateApiServerRequest := _UpdateApiServerRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateApiServerRequest)

	if err != nil {
		return err
	}

	*o = UpdateApiServerRequest(varUpdateApiServerRequest)

	return err
}

type NullableUpdateApiServerRequest struct {
	value *UpdateApiServerRequest
	isSet bool
}

func (v NullableUpdateApiServerRequest) Get() *UpdateApiServerRequest {
	return v.value
}

func (v *NullableUpdateApiServerRequest) Set(val *UpdateApiServerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateApiServerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateApiServerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateApiServerRequest(val *UpdateApiServerRequest) *NullableUpdateApiServerRequest {
	return &NullableUpdateApiServerRequest{value: val, isSet: true}
}

func (v NullableUpdateApiServerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateApiServerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
