/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InvitationResponse struct for InvitationResponse
type InvitationResponse struct {
	Id *int64 `json:"id,omitempty"`
	Organization *Organization `json:"organization,omitempty"`
	Email *string `json:"email,omitempty"`
	Inviter *LogInResponse `json:"inviter,omitempty"`
	OrganizationPrivileges []string `json:"organizationPrivileges,omitempty"`
	ApiServerPrivileges []string `json:"apiServerPrivileges,omitempty"`
	ServicePrivileges []string `json:"servicePrivileges,omitempty"`
	ClientPrivileges []string `json:"clientPrivileges,omitempty"`
}

// NewInvitationResponse instantiates a new InvitationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvitationResponse() *InvitationResponse {
	this := InvitationResponse{}
	return &this
}

// NewInvitationResponseWithDefaults instantiates a new InvitationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvitationResponseWithDefaults() *InvitationResponse {
	this := InvitationResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InvitationResponse) GetId() int64 {
	if o == nil || isNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvitationResponse) GetIdOk() (*int64, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InvitationResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *InvitationResponse) SetId(v int64) {
	o.Id = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *InvitationResponse) GetOrganization() Organization {
	if o == nil || isNil(o.Organization) {
		var ret Organization
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvitationResponse) GetOrganizationOk() (*Organization, bool) {
	if o == nil || isNil(o.Organization) {
    return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *InvitationResponse) HasOrganization() bool {
	if o != nil && !isNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given Organization and assigns it to the Organization field.
func (o *InvitationResponse) SetOrganization(v Organization) {
	o.Organization = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *InvitationResponse) GetEmail() string {
	if o == nil || isNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvitationResponse) GetEmailOk() (*string, bool) {
	if o == nil || isNil(o.Email) {
    return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *InvitationResponse) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *InvitationResponse) SetEmail(v string) {
	o.Email = &v
}

// GetInviter returns the Inviter field value if set, zero value otherwise.
func (o *InvitationResponse) GetInviter() LogInResponse {
	if o == nil || isNil(o.Inviter) {
		var ret LogInResponse
		return ret
	}
	return *o.Inviter
}

// GetInviterOk returns a tuple with the Inviter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvitationResponse) GetInviterOk() (*LogInResponse, bool) {
	if o == nil || isNil(o.Inviter) {
    return nil, false
	}
	return o.Inviter, true
}

// HasInviter returns a boolean if a field has been set.
func (o *InvitationResponse) HasInviter() bool {
	if o != nil && !isNil(o.Inviter) {
		return true
	}

	return false
}

// SetInviter gets a reference to the given LogInResponse and assigns it to the Inviter field.
func (o *InvitationResponse) SetInviter(v LogInResponse) {
	o.Inviter = &v
}

// GetOrganizationPrivileges returns the OrganizationPrivileges field value if set, zero value otherwise.
func (o *InvitationResponse) GetOrganizationPrivileges() []string {
	if o == nil || isNil(o.OrganizationPrivileges) {
		var ret []string
		return ret
	}
	return o.OrganizationPrivileges
}

// GetOrganizationPrivilegesOk returns a tuple with the OrganizationPrivileges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvitationResponse) GetOrganizationPrivilegesOk() ([]string, bool) {
	if o == nil || isNil(o.OrganizationPrivileges) {
    return nil, false
	}
	return o.OrganizationPrivileges, true
}

// HasOrganizationPrivileges returns a boolean if a field has been set.
func (o *InvitationResponse) HasOrganizationPrivileges() bool {
	if o != nil && !isNil(o.OrganizationPrivileges) {
		return true
	}

	return false
}

// SetOrganizationPrivileges gets a reference to the given []string and assigns it to the OrganizationPrivileges field.
func (o *InvitationResponse) SetOrganizationPrivileges(v []string) {
	o.OrganizationPrivileges = v
}

// GetApiServerPrivileges returns the ApiServerPrivileges field value if set, zero value otherwise.
func (o *InvitationResponse) GetApiServerPrivileges() []string {
	if o == nil || isNil(o.ApiServerPrivileges) {
		var ret []string
		return ret
	}
	return o.ApiServerPrivileges
}

// GetApiServerPrivilegesOk returns a tuple with the ApiServerPrivileges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvitationResponse) GetApiServerPrivilegesOk() ([]string, bool) {
	if o == nil || isNil(o.ApiServerPrivileges) {
    return nil, false
	}
	return o.ApiServerPrivileges, true
}

// HasApiServerPrivileges returns a boolean if a field has been set.
func (o *InvitationResponse) HasApiServerPrivileges() bool {
	if o != nil && !isNil(o.ApiServerPrivileges) {
		return true
	}

	return false
}

// SetApiServerPrivileges gets a reference to the given []string and assigns it to the ApiServerPrivileges field.
func (o *InvitationResponse) SetApiServerPrivileges(v []string) {
	o.ApiServerPrivileges = v
}

// GetServicePrivileges returns the ServicePrivileges field value if set, zero value otherwise.
func (o *InvitationResponse) GetServicePrivileges() []string {
	if o == nil || isNil(o.ServicePrivileges) {
		var ret []string
		return ret
	}
	return o.ServicePrivileges
}

// GetServicePrivilegesOk returns a tuple with the ServicePrivileges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvitationResponse) GetServicePrivilegesOk() ([]string, bool) {
	if o == nil || isNil(o.ServicePrivileges) {
    return nil, false
	}
	return o.ServicePrivileges, true
}

// HasServicePrivileges returns a boolean if a field has been set.
func (o *InvitationResponse) HasServicePrivileges() bool {
	if o != nil && !isNil(o.ServicePrivileges) {
		return true
	}

	return false
}

// SetServicePrivileges gets a reference to the given []string and assigns it to the ServicePrivileges field.
func (o *InvitationResponse) SetServicePrivileges(v []string) {
	o.ServicePrivileges = v
}

// GetClientPrivileges returns the ClientPrivileges field value if set, zero value otherwise.
func (o *InvitationResponse) GetClientPrivileges() []string {
	if o == nil || isNil(o.ClientPrivileges) {
		var ret []string
		return ret
	}
	return o.ClientPrivileges
}

// GetClientPrivilegesOk returns a tuple with the ClientPrivileges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvitationResponse) GetClientPrivilegesOk() ([]string, bool) {
	if o == nil || isNil(o.ClientPrivileges) {
    return nil, false
	}
	return o.ClientPrivileges, true
}

// HasClientPrivileges returns a boolean if a field has been set.
func (o *InvitationResponse) HasClientPrivileges() bool {
	if o != nil && !isNil(o.ClientPrivileges) {
		return true
	}

	return false
}

// SetClientPrivileges gets a reference to the given []string and assigns it to the ClientPrivileges field.
func (o *InvitationResponse) SetClientPrivileges(v []string) {
	o.ClientPrivileges = v
}

func (o InvitationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !isNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !isNil(o.Inviter) {
		toSerialize["inviter"] = o.Inviter
	}
	if !isNil(o.OrganizationPrivileges) {
		toSerialize["organizationPrivileges"] = o.OrganizationPrivileges
	}
	if !isNil(o.ApiServerPrivileges) {
		toSerialize["apiServerPrivileges"] = o.ApiServerPrivileges
	}
	if !isNil(o.ServicePrivileges) {
		toSerialize["servicePrivileges"] = o.ServicePrivileges
	}
	if !isNil(o.ClientPrivileges) {
		toSerialize["clientPrivileges"] = o.ClientPrivileges
	}
	return json.Marshal(toSerialize)
}

type NullableInvitationResponse struct {
	value *InvitationResponse
	isSet bool
}

func (v NullableInvitationResponse) Get() *InvitationResponse {
	return v.value
}

func (v *NullableInvitationResponse) Set(val *InvitationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInvitationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInvitationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvitationResponse(val *InvitationResponse) *NullableInvitationResponse {
	return &NullableInvitationResponse{value: val, isSet: true}
}

func (v NullableInvitationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvitationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


