/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateOrganizationRequest struct for UpdateOrganizationRequest
type UpdateOrganizationRequest struct {
	Plan *string `json:"plan,omitempty"`
	Name string `json:"name"`
}

// NewUpdateOrganizationRequest instantiates a new UpdateOrganizationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrganizationRequest(name string) *UpdateOrganizationRequest {
	this := UpdateOrganizationRequest{}
	this.Name = name
	return &this
}

// NewUpdateOrganizationRequestWithDefaults instantiates a new UpdateOrganizationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrganizationRequestWithDefaults() *UpdateOrganizationRequest {
	this := UpdateOrganizationRequest{}
	return &this
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetPlan() string {
	if o == nil || isNil(o.Plan) {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetPlanOk() (*string, bool) {
	if o == nil || isNil(o.Plan) {
    return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasPlan() bool {
	if o != nil && !isNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *UpdateOrganizationRequest) SetPlan(v string) {
	o.Plan = &v
}

// GetName returns the Name field value
func (o *UpdateOrganizationRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateOrganizationRequest) SetName(v string) {
	o.Name = v
}

func (o UpdateOrganizationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateOrganizationRequest struct {
	value *UpdateOrganizationRequest
	isSet bool
}

func (v NullableUpdateOrganizationRequest) Get() *UpdateOrganizationRequest {
	return v.value
}

func (v *NullableUpdateOrganizationRequest) Set(val *UpdateOrganizationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrganizationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrganizationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrganizationRequest(val *UpdateOrganizationRequest) *NullableUpdateOrganizationRequest {
	return &NullableUpdateOrganizationRequest{value: val, isSet: true}
}

func (v NullableUpdateOrganizationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrganizationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


