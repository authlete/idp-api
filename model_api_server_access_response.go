/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiServerAccessResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiServerAccessResponse{}

// ApiServerAccessResponse struct for ApiServerAccessResponse
type ApiServerAccessResponse struct {
	UserId               *int64                     `json:"userId,omitempty"`
	OrganizationId       *int64                     `json:"organizationId,omitempty"`
	ApiServerId          *int64                     `json:"apiServerId,omitempty"`
	Privileges           []string                   `json:"privileges,omitempty"`
	AllServicePrivileges []string                   `json:"allServicePrivileges,omitempty"`
	AllClientPrivileges  []string                   `json:"allClientPrivileges,omitempty"`
	ApiServer            *AuthleteApiServerResponse `json:"apiServer,omitempty"`
	ServiceAccess        []ServiceAccessResponse    `json:"serviceAccess,omitempty"`
}

// NewApiServerAccessResponse instantiates a new ApiServerAccessResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiServerAccessResponse() *ApiServerAccessResponse {
	this := ApiServerAccessResponse{}
	return &this
}

// NewApiServerAccessResponseWithDefaults instantiates a new ApiServerAccessResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiServerAccessResponseWithDefaults() *ApiServerAccessResponse {
	this := ApiServerAccessResponse{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ApiServerAccessResponse) GetUserId() int64 {
	if o == nil || IsNil(o.UserId) {
		var ret int64
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServerAccessResponse) GetUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ApiServerAccessResponse) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int64 and assigns it to the UserId field.
func (o *ApiServerAccessResponse) SetUserId(v int64) {
	o.UserId = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ApiServerAccessResponse) GetOrganizationId() int64 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int64
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServerAccessResponse) GetOrganizationIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ApiServerAccessResponse) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int64 and assigns it to the OrganizationId field.
func (o *ApiServerAccessResponse) SetOrganizationId(v int64) {
	o.OrganizationId = &v
}

// GetApiServerId returns the ApiServerId field value if set, zero value otherwise.
func (o *ApiServerAccessResponse) GetApiServerId() int64 {
	if o == nil || IsNil(o.ApiServerId) {
		var ret int64
		return ret
	}
	return *o.ApiServerId
}

// GetApiServerIdOk returns a tuple with the ApiServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServerAccessResponse) GetApiServerIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ApiServerId) {
		return nil, false
	}
	return o.ApiServerId, true
}

// HasApiServerId returns a boolean if a field has been set.
func (o *ApiServerAccessResponse) HasApiServerId() bool {
	if o != nil && !IsNil(o.ApiServerId) {
		return true
	}

	return false
}

// SetApiServerId gets a reference to the given int64 and assigns it to the ApiServerId field.
func (o *ApiServerAccessResponse) SetApiServerId(v int64) {
	o.ApiServerId = &v
}

// GetPrivileges returns the Privileges field value if set, zero value otherwise.
func (o *ApiServerAccessResponse) GetPrivileges() []string {
	if o == nil || IsNil(o.Privileges) {
		var ret []string
		return ret
	}
	return o.Privileges
}

// GetPrivilegesOk returns a tuple with the Privileges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServerAccessResponse) GetPrivilegesOk() ([]string, bool) {
	if o == nil || IsNil(o.Privileges) {
		return nil, false
	}
	return o.Privileges, true
}

// HasPrivileges returns a boolean if a field has been set.
func (o *ApiServerAccessResponse) HasPrivileges() bool {
	if o != nil && !IsNil(o.Privileges) {
		return true
	}

	return false
}

// SetPrivileges gets a reference to the given []string and assigns it to the Privileges field.
func (o *ApiServerAccessResponse) SetPrivileges(v []string) {
	o.Privileges = v
}

// GetAllServicePrivileges returns the AllServicePrivileges field value if set, zero value otherwise.
func (o *ApiServerAccessResponse) GetAllServicePrivileges() []string {
	if o == nil || IsNil(o.AllServicePrivileges) {
		var ret []string
		return ret
	}
	return o.AllServicePrivileges
}

// GetAllServicePrivilegesOk returns a tuple with the AllServicePrivileges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServerAccessResponse) GetAllServicePrivilegesOk() ([]string, bool) {
	if o == nil || IsNil(o.AllServicePrivileges) {
		return nil, false
	}
	return o.AllServicePrivileges, true
}

// HasAllServicePrivileges returns a boolean if a field has been set.
func (o *ApiServerAccessResponse) HasAllServicePrivileges() bool {
	if o != nil && !IsNil(o.AllServicePrivileges) {
		return true
	}

	return false
}

// SetAllServicePrivileges gets a reference to the given []string and assigns it to the AllServicePrivileges field.
func (o *ApiServerAccessResponse) SetAllServicePrivileges(v []string) {
	o.AllServicePrivileges = v
}

// GetAllClientPrivileges returns the AllClientPrivileges field value if set, zero value otherwise.
func (o *ApiServerAccessResponse) GetAllClientPrivileges() []string {
	if o == nil || IsNil(o.AllClientPrivileges) {
		var ret []string
		return ret
	}
	return o.AllClientPrivileges
}

// GetAllClientPrivilegesOk returns a tuple with the AllClientPrivileges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServerAccessResponse) GetAllClientPrivilegesOk() ([]string, bool) {
	if o == nil || IsNil(o.AllClientPrivileges) {
		return nil, false
	}
	return o.AllClientPrivileges, true
}

// HasAllClientPrivileges returns a boolean if a field has been set.
func (o *ApiServerAccessResponse) HasAllClientPrivileges() bool {
	if o != nil && !IsNil(o.AllClientPrivileges) {
		return true
	}

	return false
}

// SetAllClientPrivileges gets a reference to the given []string and assigns it to the AllClientPrivileges field.
func (o *ApiServerAccessResponse) SetAllClientPrivileges(v []string) {
	o.AllClientPrivileges = v
}

// GetApiServer returns the ApiServer field value if set, zero value otherwise.
func (o *ApiServerAccessResponse) GetApiServer() AuthleteApiServerResponse {
	if o == nil || IsNil(o.ApiServer) {
		var ret AuthleteApiServerResponse
		return ret
	}
	return *o.ApiServer
}

// GetApiServerOk returns a tuple with the ApiServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServerAccessResponse) GetApiServerOk() (*AuthleteApiServerResponse, bool) {
	if o == nil || IsNil(o.ApiServer) {
		return nil, false
	}
	return o.ApiServer, true
}

// HasApiServer returns a boolean if a field has been set.
func (o *ApiServerAccessResponse) HasApiServer() bool {
	if o != nil && !IsNil(o.ApiServer) {
		return true
	}

	return false
}

// SetApiServer gets a reference to the given AuthleteApiServerResponse and assigns it to the ApiServer field.
func (o *ApiServerAccessResponse) SetApiServer(v AuthleteApiServerResponse) {
	o.ApiServer = &v
}

// GetServiceAccess returns the ServiceAccess field value if set, zero value otherwise.
func (o *ApiServerAccessResponse) GetServiceAccess() []ServiceAccessResponse {
	if o == nil || IsNil(o.ServiceAccess) {
		var ret []ServiceAccessResponse
		return ret
	}
	return o.ServiceAccess
}

// GetServiceAccessOk returns a tuple with the ServiceAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServerAccessResponse) GetServiceAccessOk() ([]ServiceAccessResponse, bool) {
	if o == nil || IsNil(o.ServiceAccess) {
		return nil, false
	}
	return o.ServiceAccess, true
}

// HasServiceAccess returns a boolean if a field has been set.
func (o *ApiServerAccessResponse) HasServiceAccess() bool {
	if o != nil && !IsNil(o.ServiceAccess) {
		return true
	}

	return false
}

// SetServiceAccess gets a reference to the given []ServiceAccessResponse and assigns it to the ServiceAccess field.
func (o *ApiServerAccessResponse) SetServiceAccess(v []ServiceAccessResponse) {
	o.ServiceAccess = v
}

func (o ApiServerAccessResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiServerAccessResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.ApiServerId) {
		toSerialize["apiServerId"] = o.ApiServerId
	}
	if !IsNil(o.Privileges) {
		toSerialize["privileges"] = o.Privileges
	}
	if !IsNil(o.AllServicePrivileges) {
		toSerialize["allServicePrivileges"] = o.AllServicePrivileges
	}
	if !IsNil(o.AllClientPrivileges) {
		toSerialize["allClientPrivileges"] = o.AllClientPrivileges
	}
	if !IsNil(o.ApiServer) {
		toSerialize["apiServer"] = o.ApiServer
	}
	if !IsNil(o.ServiceAccess) {
		toSerialize["serviceAccess"] = o.ServiceAccess
	}
	return toSerialize, nil
}

type NullableApiServerAccessResponse struct {
	value *ApiServerAccessResponse
	isSet bool
}

func (v NullableApiServerAccessResponse) Get() *ApiServerAccessResponse {
	return v.value
}

func (v *NullableApiServerAccessResponse) Set(val *ApiServerAccessResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApiServerAccessResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApiServerAccessResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiServerAccessResponse(val *ApiServerAccessResponse) *NullableApiServerAccessResponse {
	return &NullableApiServerAccessResponse{value: val, isSet: true}
}

func (v NullableApiServerAccessResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiServerAccessResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
