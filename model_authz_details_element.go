/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AuthzDetailsElement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthzDetailsElement{}

// AuthzDetailsElement struct for AuthzDetailsElement
type AuthzDetailsElement struct {
	Type               *string                           `json:"type,omitempty"`
	Locations          []string                          `json:"locations,omitempty"`
	Actions            []string                          `json:"actions,omitempty"`
	DataTypes          []string                          `json:"dataTypes,omitempty"`
	Identifier         *string                           `json:"identifier,omitempty"`
	Privileges         []string                          `json:"privileges,omitempty"`
	OtherFields        *string                           `json:"otherFields,omitempty"`
	OtherFieldsFromMap *AuthzDetailsElement              `json:"otherFieldsFromMap,omitempty"`
	OtherFieldsAsMap   map[string]map[string]interface{} `json:"otherFieldsAsMap,omitempty"`
}

// NewAuthzDetailsElement instantiates a new AuthzDetailsElement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthzDetailsElement() *AuthzDetailsElement {
	this := AuthzDetailsElement{}
	return &this
}

// NewAuthzDetailsElementWithDefaults instantiates a new AuthzDetailsElement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthzDetailsElementWithDefaults() *AuthzDetailsElement {
	this := AuthzDetailsElement{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AuthzDetailsElement) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthzDetailsElement) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AuthzDetailsElement) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AuthzDetailsElement) SetType(v string) {
	o.Type = &v
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *AuthzDetailsElement) GetLocations() []string {
	if o == nil || IsNil(o.Locations) {
		var ret []string
		return ret
	}
	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthzDetailsElement) GetLocationsOk() ([]string, bool) {
	if o == nil || IsNil(o.Locations) {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *AuthzDetailsElement) HasLocations() bool {
	if o != nil && !IsNil(o.Locations) {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []string and assigns it to the Locations field.
func (o *AuthzDetailsElement) SetLocations(v []string) {
	o.Locations = v
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *AuthzDetailsElement) GetActions() []string {
	if o == nil || IsNil(o.Actions) {
		var ret []string
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthzDetailsElement) GetActionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Actions) {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *AuthzDetailsElement) HasActions() bool {
	if o != nil && !IsNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given []string and assigns it to the Actions field.
func (o *AuthzDetailsElement) SetActions(v []string) {
	o.Actions = v
}

// GetDataTypes returns the DataTypes field value if set, zero value otherwise.
func (o *AuthzDetailsElement) GetDataTypes() []string {
	if o == nil || IsNil(o.DataTypes) {
		var ret []string
		return ret
	}
	return o.DataTypes
}

// GetDataTypesOk returns a tuple with the DataTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthzDetailsElement) GetDataTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.DataTypes) {
		return nil, false
	}
	return o.DataTypes, true
}

// HasDataTypes returns a boolean if a field has been set.
func (o *AuthzDetailsElement) HasDataTypes() bool {
	if o != nil && !IsNil(o.DataTypes) {
		return true
	}

	return false
}

// SetDataTypes gets a reference to the given []string and assigns it to the DataTypes field.
func (o *AuthzDetailsElement) SetDataTypes(v []string) {
	o.DataTypes = v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *AuthzDetailsElement) GetIdentifier() string {
	if o == nil || IsNil(o.Identifier) {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthzDetailsElement) GetIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.Identifier) {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *AuthzDetailsElement) HasIdentifier() bool {
	if o != nil && !IsNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *AuthzDetailsElement) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetPrivileges returns the Privileges field value if set, zero value otherwise.
func (o *AuthzDetailsElement) GetPrivileges() []string {
	if o == nil || IsNil(o.Privileges) {
		var ret []string
		return ret
	}
	return o.Privileges
}

// GetPrivilegesOk returns a tuple with the Privileges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthzDetailsElement) GetPrivilegesOk() ([]string, bool) {
	if o == nil || IsNil(o.Privileges) {
		return nil, false
	}
	return o.Privileges, true
}

// HasPrivileges returns a boolean if a field has been set.
func (o *AuthzDetailsElement) HasPrivileges() bool {
	if o != nil && !IsNil(o.Privileges) {
		return true
	}

	return false
}

// SetPrivileges gets a reference to the given []string and assigns it to the Privileges field.
func (o *AuthzDetailsElement) SetPrivileges(v []string) {
	o.Privileges = v
}

// GetOtherFields returns the OtherFields field value if set, zero value otherwise.
func (o *AuthzDetailsElement) GetOtherFields() string {
	if o == nil || IsNil(o.OtherFields) {
		var ret string
		return ret
	}
	return *o.OtherFields
}

// GetOtherFieldsOk returns a tuple with the OtherFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthzDetailsElement) GetOtherFieldsOk() (*string, bool) {
	if o == nil || IsNil(o.OtherFields) {
		return nil, false
	}
	return o.OtherFields, true
}

// HasOtherFields returns a boolean if a field has been set.
func (o *AuthzDetailsElement) HasOtherFields() bool {
	if o != nil && !IsNil(o.OtherFields) {
		return true
	}

	return false
}

// SetOtherFields gets a reference to the given string and assigns it to the OtherFields field.
func (o *AuthzDetailsElement) SetOtherFields(v string) {
	o.OtherFields = &v
}

// GetOtherFieldsFromMap returns the OtherFieldsFromMap field value if set, zero value otherwise.
func (o *AuthzDetailsElement) GetOtherFieldsFromMap() AuthzDetailsElement {
	if o == nil || IsNil(o.OtherFieldsFromMap) {
		var ret AuthzDetailsElement
		return ret
	}
	return *o.OtherFieldsFromMap
}

// GetOtherFieldsFromMapOk returns a tuple with the OtherFieldsFromMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthzDetailsElement) GetOtherFieldsFromMapOk() (*AuthzDetailsElement, bool) {
	if o == nil || IsNil(o.OtherFieldsFromMap) {
		return nil, false
	}
	return o.OtherFieldsFromMap, true
}

// HasOtherFieldsFromMap returns a boolean if a field has been set.
func (o *AuthzDetailsElement) HasOtherFieldsFromMap() bool {
	if o != nil && !IsNil(o.OtherFieldsFromMap) {
		return true
	}

	return false
}

// SetOtherFieldsFromMap gets a reference to the given AuthzDetailsElement and assigns it to the OtherFieldsFromMap field.
func (o *AuthzDetailsElement) SetOtherFieldsFromMap(v AuthzDetailsElement) {
	o.OtherFieldsFromMap = &v
}

// GetOtherFieldsAsMap returns the OtherFieldsAsMap field value if set, zero value otherwise.
func (o *AuthzDetailsElement) GetOtherFieldsAsMap() map[string]map[string]interface{} {
	if o == nil || IsNil(o.OtherFieldsAsMap) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.OtherFieldsAsMap
}

// GetOtherFieldsAsMapOk returns a tuple with the OtherFieldsAsMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthzDetailsElement) GetOtherFieldsAsMapOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.OtherFieldsAsMap) {
		return map[string]map[string]interface{}{}, false
	}
	return o.OtherFieldsAsMap, true
}

// HasOtherFieldsAsMap returns a boolean if a field has been set.
func (o *AuthzDetailsElement) HasOtherFieldsAsMap() bool {
	if o != nil && !IsNil(o.OtherFieldsAsMap) {
		return true
	}

	return false
}

// SetOtherFieldsAsMap gets a reference to the given map[string]map[string]interface{} and assigns it to the OtherFieldsAsMap field.
func (o *AuthzDetailsElement) SetOtherFieldsAsMap(v map[string]map[string]interface{}) {
	o.OtherFieldsAsMap = v
}

func (o AuthzDetailsElement) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthzDetailsElement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Locations) {
		toSerialize["locations"] = o.Locations
	}
	if !IsNil(o.Actions) {
		toSerialize["actions"] = o.Actions
	}
	if !IsNil(o.DataTypes) {
		toSerialize["dataTypes"] = o.DataTypes
	}
	if !IsNil(o.Identifier) {
		toSerialize["identifier"] = o.Identifier
	}
	if !IsNil(o.Privileges) {
		toSerialize["privileges"] = o.Privileges
	}
	if !IsNil(o.OtherFields) {
		toSerialize["otherFields"] = o.OtherFields
	}
	if !IsNil(o.OtherFieldsFromMap) {
		toSerialize["otherFieldsFromMap"] = o.OtherFieldsFromMap
	}
	if !IsNil(o.OtherFieldsAsMap) {
		toSerialize["otherFieldsAsMap"] = o.OtherFieldsAsMap
	}
	return toSerialize, nil
}

type NullableAuthzDetailsElement struct {
	value *AuthzDetailsElement
	isSet bool
}

func (v NullableAuthzDetailsElement) Get() *AuthzDetailsElement {
	return v.value
}

func (v *NullableAuthzDetailsElement) Set(val *AuthzDetailsElement) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthzDetailsElement) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthzDetailsElement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthzDetailsElement(val *AuthzDetailsElement) *NullableAuthzDetailsElement {
	return &NullableAuthzDetailsElement{value: val, isSet: true}
}

func (v NullableAuthzDetailsElement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthzDetailsElement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
