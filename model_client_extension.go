/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClientExtension struct for ClientExtension
type ClientExtension struct {
	RequestableScopesEnabled *bool `json:"requestableScopesEnabled,omitempty"`
	RequestableScopes []string `json:"requestableScopes,omitempty"`
	AccessTokenDuration *int64 `json:"accessTokenDuration,omitempty"`
	RefreshTokenDuration *int64 `json:"refreshTokenDuration,omitempty"`
	TokenExchangePermitted *bool `json:"tokenExchangePermitted,omitempty"`
}

// NewClientExtension instantiates a new ClientExtension object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientExtension() *ClientExtension {
	this := ClientExtension{}
	return &this
}

// NewClientExtensionWithDefaults instantiates a new ClientExtension object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientExtensionWithDefaults() *ClientExtension {
	this := ClientExtension{}
	return &this
}

// GetRequestableScopesEnabled returns the RequestableScopesEnabled field value if set, zero value otherwise.
func (o *ClientExtension) GetRequestableScopesEnabled() bool {
	if o == nil || isNil(o.RequestableScopesEnabled) {
		var ret bool
		return ret
	}
	return *o.RequestableScopesEnabled
}

// GetRequestableScopesEnabledOk returns a tuple with the RequestableScopesEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientExtension) GetRequestableScopesEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.RequestableScopesEnabled) {
    return nil, false
	}
	return o.RequestableScopesEnabled, true
}

// HasRequestableScopesEnabled returns a boolean if a field has been set.
func (o *ClientExtension) HasRequestableScopesEnabled() bool {
	if o != nil && !isNil(o.RequestableScopesEnabled) {
		return true
	}

	return false
}

// SetRequestableScopesEnabled gets a reference to the given bool and assigns it to the RequestableScopesEnabled field.
func (o *ClientExtension) SetRequestableScopesEnabled(v bool) {
	o.RequestableScopesEnabled = &v
}

// GetRequestableScopes returns the RequestableScopes field value if set, zero value otherwise.
func (o *ClientExtension) GetRequestableScopes() []string {
	if o == nil || isNil(o.RequestableScopes) {
		var ret []string
		return ret
	}
	return o.RequestableScopes
}

// GetRequestableScopesOk returns a tuple with the RequestableScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientExtension) GetRequestableScopesOk() ([]string, bool) {
	if o == nil || isNil(o.RequestableScopes) {
    return nil, false
	}
	return o.RequestableScopes, true
}

// HasRequestableScopes returns a boolean if a field has been set.
func (o *ClientExtension) HasRequestableScopes() bool {
	if o != nil && !isNil(o.RequestableScopes) {
		return true
	}

	return false
}

// SetRequestableScopes gets a reference to the given []string and assigns it to the RequestableScopes field.
func (o *ClientExtension) SetRequestableScopes(v []string) {
	o.RequestableScopes = v
}

// GetAccessTokenDuration returns the AccessTokenDuration field value if set, zero value otherwise.
func (o *ClientExtension) GetAccessTokenDuration() int64 {
	if o == nil || isNil(o.AccessTokenDuration) {
		var ret int64
		return ret
	}
	return *o.AccessTokenDuration
}

// GetAccessTokenDurationOk returns a tuple with the AccessTokenDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientExtension) GetAccessTokenDurationOk() (*int64, bool) {
	if o == nil || isNil(o.AccessTokenDuration) {
    return nil, false
	}
	return o.AccessTokenDuration, true
}

// HasAccessTokenDuration returns a boolean if a field has been set.
func (o *ClientExtension) HasAccessTokenDuration() bool {
	if o != nil && !isNil(o.AccessTokenDuration) {
		return true
	}

	return false
}

// SetAccessTokenDuration gets a reference to the given int64 and assigns it to the AccessTokenDuration field.
func (o *ClientExtension) SetAccessTokenDuration(v int64) {
	o.AccessTokenDuration = &v
}

// GetRefreshTokenDuration returns the RefreshTokenDuration field value if set, zero value otherwise.
func (o *ClientExtension) GetRefreshTokenDuration() int64 {
	if o == nil || isNil(o.RefreshTokenDuration) {
		var ret int64
		return ret
	}
	return *o.RefreshTokenDuration
}

// GetRefreshTokenDurationOk returns a tuple with the RefreshTokenDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientExtension) GetRefreshTokenDurationOk() (*int64, bool) {
	if o == nil || isNil(o.RefreshTokenDuration) {
    return nil, false
	}
	return o.RefreshTokenDuration, true
}

// HasRefreshTokenDuration returns a boolean if a field has been set.
func (o *ClientExtension) HasRefreshTokenDuration() bool {
	if o != nil && !isNil(o.RefreshTokenDuration) {
		return true
	}

	return false
}

// SetRefreshTokenDuration gets a reference to the given int64 and assigns it to the RefreshTokenDuration field.
func (o *ClientExtension) SetRefreshTokenDuration(v int64) {
	o.RefreshTokenDuration = &v
}

// GetTokenExchangePermitted returns the TokenExchangePermitted field value if set, zero value otherwise.
func (o *ClientExtension) GetTokenExchangePermitted() bool {
	if o == nil || isNil(o.TokenExchangePermitted) {
		var ret bool
		return ret
	}
	return *o.TokenExchangePermitted
}

// GetTokenExchangePermittedOk returns a tuple with the TokenExchangePermitted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientExtension) GetTokenExchangePermittedOk() (*bool, bool) {
	if o == nil || isNil(o.TokenExchangePermitted) {
    return nil, false
	}
	return o.TokenExchangePermitted, true
}

// HasTokenExchangePermitted returns a boolean if a field has been set.
func (o *ClientExtension) HasTokenExchangePermitted() bool {
	if o != nil && !isNil(o.TokenExchangePermitted) {
		return true
	}

	return false
}

// SetTokenExchangePermitted gets a reference to the given bool and assigns it to the TokenExchangePermitted field.
func (o *ClientExtension) SetTokenExchangePermitted(v bool) {
	o.TokenExchangePermitted = &v
}

func (o ClientExtension) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.RequestableScopesEnabled) {
		toSerialize["requestableScopesEnabled"] = o.RequestableScopesEnabled
	}
	if !isNil(o.RequestableScopes) {
		toSerialize["requestableScopes"] = o.RequestableScopes
	}
	if !isNil(o.AccessTokenDuration) {
		toSerialize["accessTokenDuration"] = o.AccessTokenDuration
	}
	if !isNil(o.RefreshTokenDuration) {
		toSerialize["refreshTokenDuration"] = o.RefreshTokenDuration
	}
	if !isNil(o.TokenExchangePermitted) {
		toSerialize["tokenExchangePermitted"] = o.TokenExchangePermitted
	}
	return json.Marshal(toSerialize)
}

type NullableClientExtension struct {
	value *ClientExtension
	isSet bool
}

func (v NullableClientExtension) Get() *ClientExtension {
	return v.value
}

func (v *NullableClientExtension) Set(val *ClientExtension) {
	v.value = val
	v.isSet = true
}

func (v NullableClientExtension) IsSet() bool {
	return v.isSet
}

func (v *NullableClientExtension) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientExtension(val *ClientExtension) *NullableClientExtension {
	return &NullableClientExtension{value: val, isSet: true}
}

func (v NullableClientExtension) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientExtension) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


