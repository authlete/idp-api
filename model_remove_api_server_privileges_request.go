/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RemoveApiServerPrivilegesRequest struct for RemoveApiServerPrivilegesRequest
type RemoveApiServerPrivilegesRequest struct {
	ApiServerId *int64 `json:"apiServerId,omitempty"`
	OrganizationId *int64 `json:"organizationId,omitempty"`
	UserId *int64 `json:"userId,omitempty"`
}

// NewRemoveApiServerPrivilegesRequest instantiates a new RemoveApiServerPrivilegesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoveApiServerPrivilegesRequest() *RemoveApiServerPrivilegesRequest {
	this := RemoveApiServerPrivilegesRequest{}
	return &this
}

// NewRemoveApiServerPrivilegesRequestWithDefaults instantiates a new RemoveApiServerPrivilegesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoveApiServerPrivilegesRequestWithDefaults() *RemoveApiServerPrivilegesRequest {
	this := RemoveApiServerPrivilegesRequest{}
	return &this
}

// GetApiServerId returns the ApiServerId field value if set, zero value otherwise.
func (o *RemoveApiServerPrivilegesRequest) GetApiServerId() int64 {
	if o == nil || isNil(o.ApiServerId) {
		var ret int64
		return ret
	}
	return *o.ApiServerId
}

// GetApiServerIdOk returns a tuple with the ApiServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoveApiServerPrivilegesRequest) GetApiServerIdOk() (*int64, bool) {
	if o == nil || isNil(o.ApiServerId) {
    return nil, false
	}
	return o.ApiServerId, true
}

// HasApiServerId returns a boolean if a field has been set.
func (o *RemoveApiServerPrivilegesRequest) HasApiServerId() bool {
	if o != nil && !isNil(o.ApiServerId) {
		return true
	}

	return false
}

// SetApiServerId gets a reference to the given int64 and assigns it to the ApiServerId field.
func (o *RemoveApiServerPrivilegesRequest) SetApiServerId(v int64) {
	o.ApiServerId = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *RemoveApiServerPrivilegesRequest) GetOrganizationId() int64 {
	if o == nil || isNil(o.OrganizationId) {
		var ret int64
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoveApiServerPrivilegesRequest) GetOrganizationIdOk() (*int64, bool) {
	if o == nil || isNil(o.OrganizationId) {
    return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *RemoveApiServerPrivilegesRequest) HasOrganizationId() bool {
	if o != nil && !isNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int64 and assigns it to the OrganizationId field.
func (o *RemoveApiServerPrivilegesRequest) SetOrganizationId(v int64) {
	o.OrganizationId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *RemoveApiServerPrivilegesRequest) GetUserId() int64 {
	if o == nil || isNil(o.UserId) {
		var ret int64
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoveApiServerPrivilegesRequest) GetUserIdOk() (*int64, bool) {
	if o == nil || isNil(o.UserId) {
    return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *RemoveApiServerPrivilegesRequest) HasUserId() bool {
	if o != nil && !isNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int64 and assigns it to the UserId field.
func (o *RemoveApiServerPrivilegesRequest) SetUserId(v int64) {
	o.UserId = &v
}

func (o RemoveApiServerPrivilegesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ApiServerId) {
		toSerialize["apiServerId"] = o.ApiServerId
	}
	if !isNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !isNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableRemoveApiServerPrivilegesRequest struct {
	value *RemoveApiServerPrivilegesRequest
	isSet bool
}

func (v NullableRemoveApiServerPrivilegesRequest) Get() *RemoveApiServerPrivilegesRequest {
	return v.value
}

func (v *NullableRemoveApiServerPrivilegesRequest) Set(val *RemoveApiServerPrivilegesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoveApiServerPrivilegesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoveApiServerPrivilegesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoveApiServerPrivilegesRequest(val *RemoveApiServerPrivilegesRequest) *NullableRemoveApiServerPrivilegesRequest {
	return &NullableRemoveApiServerPrivilegesRequest{value: val, isSet: true}
}

func (v NullableRemoveApiServerPrivilegesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoveApiServerPrivilegesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


