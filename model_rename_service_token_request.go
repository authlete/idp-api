/*
OpenAPI definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RenameServiceTokenRequest struct for RenameServiceTokenRequest
type RenameServiceTokenRequest struct {
	ServiceId int64 `json:"serviceId"`
	OrganizationId int64 `json:"organizationId"`
	ApiServerId int64 `json:"apiServerId"`
	TokenId string `json:"tokenId"`
	Description string `json:"description"`
}

// NewRenameServiceTokenRequest instantiates a new RenameServiceTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenameServiceTokenRequest(serviceId int64, organizationId int64, apiServerId int64, tokenId string, description string) *RenameServiceTokenRequest {
	this := RenameServiceTokenRequest{}
	this.ServiceId = serviceId
	this.OrganizationId = organizationId
	this.ApiServerId = apiServerId
	this.TokenId = tokenId
	this.Description = description
	return &this
}

// NewRenameServiceTokenRequestWithDefaults instantiates a new RenameServiceTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenameServiceTokenRequestWithDefaults() *RenameServiceTokenRequest {
	this := RenameServiceTokenRequest{}
	return &this
}

// GetServiceId returns the ServiceId field value
func (o *RenameServiceTokenRequest) GetServiceId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *RenameServiceTokenRequest) GetServiceIdOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *RenameServiceTokenRequest) SetServiceId(v int64) {
	o.ServiceId = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *RenameServiceTokenRequest) GetOrganizationId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *RenameServiceTokenRequest) GetOrganizationIdOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *RenameServiceTokenRequest) SetOrganizationId(v int64) {
	o.OrganizationId = v
}

// GetApiServerId returns the ApiServerId field value
func (o *RenameServiceTokenRequest) GetApiServerId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ApiServerId
}

// GetApiServerIdOk returns a tuple with the ApiServerId field value
// and a boolean to check if the value has been set.
func (o *RenameServiceTokenRequest) GetApiServerIdOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ApiServerId, true
}

// SetApiServerId sets field value
func (o *RenameServiceTokenRequest) SetApiServerId(v int64) {
	o.ApiServerId = v
}

// GetTokenId returns the TokenId field value
func (o *RenameServiceTokenRequest) GetTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *RenameServiceTokenRequest) GetTokenIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *RenameServiceTokenRequest) SetTokenId(v string) {
	o.TokenId = v
}

// GetDescription returns the Description field value
func (o *RenameServiceTokenRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *RenameServiceTokenRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *RenameServiceTokenRequest) SetDescription(v string) {
	o.Description = v
}

func (o RenameServiceTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["serviceId"] = o.ServiceId
	}
	if true {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if true {
		toSerialize["apiServerId"] = o.ApiServerId
	}
	if true {
		toSerialize["tokenId"] = o.TokenId
	}
	if true {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableRenameServiceTokenRequest struct {
	value *RenameServiceTokenRequest
	isSet bool
}

func (v NullableRenameServiceTokenRequest) Get() *RenameServiceTokenRequest {
	return v.value
}

func (v *NullableRenameServiceTokenRequest) Set(val *RenameServiceTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRenameServiceTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRenameServiceTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenameServiceTokenRequest(val *RenameServiceTokenRequest) *NullableRenameServiceTokenRequest {
	return &NullableRenameServiceTokenRequest{value: val, isSet: true}
}

func (v NullableRenameServiceTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenameServiceTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


